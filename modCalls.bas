Attribute VB_Name = "modCalls"
Option Explicit
 
Public VMMServiceCalls As Long
Public VMMStart As Long
Public VMMHandle As Long
Public StatusStr(1 To 100) As String
Public SCall(&H191) As String

Public Function ServiceCalls() As String
    'Values for VMM (VxD ID 0001h) service number:
    SCall(&H0) = "Get_Version"
    SCall(&H1) = "Get_Current_VM_Handle"
    SCall(&H2) = "Test_Current_VM_Handle"
    SCall(&H3) = "Get_System_VM_Handle"
    SCall(&H4) = "Test_System_VM_Handle"
    SCall(&H5) = "Validate_VM_Handle"
    SCall(&H6) = "Get_VMM_Reenter_Count"
    SCall(&H7) = "Begin_Reentrant_Execution"
    SCall(&H8) = "End_Reentrant_Execution"
    SCall(&H9) = "Install_V86_Breakpoint"
    SCall(&HA) = "Remove_V86_Breakpoint"
    SCall(&HB) = "Allocate_V86_Callback"
    SCall(&HC) = "Allocation_PM_Callback"
    SCall(&HD) = "Call_When_VM_Returns"
    SCall(&HE) = "Schedule_Global_Event"
    SCall(&HF) = "Schedule_VM_Event"
    SCall(&H10) = "Call_Global_Event"
    SCall(&H11) = "Call_VM_Event"
    SCall(&H12) = "Cancel_Global_Event"
    SCall(&H13) = "Cancel_VM_Event"
    SCall(&H14) = "Call_Priority_VM_Event"
    SCall(&H15) = "Cancel_Priority_VM_Event"
    SCall(&H16) = "Get_NMI_Handler_Address"
    SCall(&H17) = "Set_NMI_Handler_Address"
    SCall(&H18) = "Hook_NMI_Event"
    SCall(&H19) = "Call_When_VM_Interrupts_Enabled"
    SCall(&H1A) = "Enable_VM_Interrupts"
    SCall(&H1B) = "Disable_VM_Interrupts"
    SCall(&H1C) = "Map_Flat"
    SCall(&H1D) = "Map_Linear_To_VM_Address"
    SCall(&H1E) = "Adjust_Execution_Priority"
    SCall(&H1F) = "Begin_Critical_Section"
    SCall(&H20) = "End_Critical_Section"
    SCall(&H21) = "End_Critical_Section_And_Suspend"
    SCall(&H22) = "Claim_Critical_Section"
    SCall(&H23) = "Release_Critical_Section"
    SCall(&H24) = "Call_When_Not_Critical"
    SCall(&H25) = "Create_Semaphore"
    SCall(&H26) = "Destroy_Semaphore"
    SCall(&H27) = "Wait_On_Semaphore"
    SCall(&H28) = "Signal_Semaphore"
    SCall(&H29) = "Get_Critical_Section_Status"
    SCall(&H2A) = "Call_When_Task_Switched"
    SCall(&H2B) = "Suspend_VM"
    SCall(&H2C) = "Resume_VM"
    SCall(&H2D) = "No_Fail_Resume_VM"
    SCall(&H2E) = "Nuke_VM"
    SCall(&H2F) = "Crash_Current_VM"
    SCall(&H30) = "Get_Execution_Focus"
    SCall(&H31) = "Set_Execution_Focus"
    SCall(&H32) = "Get_Time_Slice_Priority"
    SCall(&H33) = "Set_Time_Slice_Priority"
    SCall(&H34) = "Get_Time_Slice_Granularity"
    SCall(&H35) = "Set_Time_Slice_Granularity"
    SCall(&H36) = "Get_Time_Slice_Information"
    SCall(&H37) = "Adjust_Execution_Time"
    SCall(&H38) = "Release_Time_Slice"
    SCall(&H39) = "Wake_Up_VM"
    SCall(&H3A) = "Call_When_Idle"
    SCall(&H3B) = "Get_Next_VM_Handle"
    SCall(&H3C) = "Set_Global_Timeout"
    SCall(&H3D) = "Set_VM_Timeout"
    SCall(&H3E) = "Cancel_Timeout"
    SCall(&H3F) = "Get_System_Time"     'Return: EAX = time in milliseconds that Windows has been running
    SCall(&H40) = "Get_VM_Execution_Time"
    SCall(&H41) = "Hook_V86_Interrupt_Chain"
    SCall(&H42) = "Get_V86_Interrupt_Vector"
    SCall(&H43) = "Set_V86_Interrupt_Vector"
    SCall(&H44) = "Get_PM_Interrupt_Vector"
    SCall(&H45) = "Set_PM_Interrupt_Vector"
    SCall(&H46) = "Simulate_Interrupt"
    SCall(&H47) = "Simulate_IRET"
    SCall(&H48) = "Simulate_Far_Call"
    SCall(&H49) = "Simulate_Far_Jump"
    SCall(&H4A) = "Simulate_Far_Ret"
    SCall(&H4B) = "Simulate_Far_Ret_N"
    SCall(&H4C) = "Build_Interrupt_Stack_Frame"
    SCall(&H4D) = "Simulate_Push"
    SCall(&H4E) = "Simulate_Pop"
    SCall(&H4F) = "_HeapAllocate"
    SCall(&H50) = "_HeapReAllocate"
    SCall(&H51) = "_HeapFree"
    SCall(&H52) = "_HeapGetSize"
    SCall(&H53) = "_PageAllocate"
    SCall(&H54) = "_PageReAllocate"
    SCall(&H55) = "_PageFree"
    SCall(&H56) = "_PageLock"
    SCall(&H57) = "_PageUnLock"
    SCall(&H58) = "_PageGetSizeAddr"
    SCall(&H59) = "_PageGetAllocInfo"
    SCall(&H5A) = "_GetFreePageCount"
    SCall(&H5B) = "_GetSysPageCount"
    SCall(&H5C) = "_GetVMPgCount"
    SCall(&H5D) = "_MapIntoV86"
    SCall(&H5E) = "_PhysIntoV86"
    SCall(&H5F) = "_TestGlobalV86Mem"
    SCall(&H60) = "_ModifyPageBits"
    SCall(&H61) = "_Copy_Page_Table"
    SCall(&H62) = "Map_Linear_Into_V86"
    SCall(&H63) = "Linear_Page_Lock"
    SCall(&H64) = "Linear_Page_Unlock"
    SCall(&H65) = "_SetResetV86Pageable"
    SCall(&H66) = "_GetV86PageableArray"
    SCall(&H67) = "_PageCheckLinRange"
    SCall(&H68) = "Page_Out_Dirty_Pages"
    SCall(&H69) = "Discard_Pages"
    SCall(&H6A) = "_GetNulPageHandle"
    SCall(&H6B) = "Get_First_V86_Page"
    SCall(&H6C) = "Map_Physical_Address_To_Linear_Address"
    SCall(&H6D) = "_GetAppFlatDSAlias"
    SCall(&H6E) = "_SelectorMapFlat"
    SCall(&H6F) = "_GetDemandPageInfo"
    SCall(&H70) = "_GetSetPageOutCount"
    SCall(&H71) = "Hook_V86_Page"
    SCall(&H72) = "Assign_Device_V86_Pages"
    SCall(&H73) = "Deassign_Device_V86_Pages"
    SCall(&H74) = "Get_Array_Of_V86_Pages_For_Device"
    SCall(&H75) = "_SetNULPageAddr"
    SCall(&H76) = "Allocate_GDT_Selector"
    SCall(&H77) = "Free_GDT_Selector"
    SCall(&H78) = "Allocate_LDT_Selector"
    SCall(&H79) = "Free_LDT_Selector"
    SCall(&H7A) = "_BuildDescriptorDWORDs"
    SCall(&H7B) = "Get_Descriptor"
    SCall(&H7C) = "Set_Descriptor"
    SCall(&H7D) = "MMGR_Toggle_HMA"
    SCall(&H7E) = "Get_Fault_Hook_Addresses"
    SCall(&H7F) = "Hook_V86_Fault"
    SCall(&H80) = "Hook_PM_Fault"
    SCall(&H81) = "Hook_VMM_Fault"
    SCall(&H82) = "Begin_Nested_V86_Execution"
    SCall(&H83) = "Begin_Nested_Execution"
    SCall(&H84) = "Execute_V86_Mode_Interrupt"
    SCall(&H85) = "Resume_Execution"
    SCall(&H86) = "End_Nested_Execution"
    SCall(&H87) = "Allocate_PM_Application_Callback_Area"
    SCall(&H88) = "Get_Current_PM_Application_Callback_Area"
    SCall(&H89) = "Set_V86_Execution_Mode"
    SCall(&H8A) = "Set_PM_Execution_Mode"
    SCall(&H8B) = "Begin_Using_Locked_PM_Stack"
    SCall(&H8C) = "End_Using_Locked_PM_Stack"
    SCall(&H8D) = "Save_Client_State"
    SCall(&H8E) = "Restore_Client_State"
    SCall(&H8F) = "Execute_VxD_Interrupt"
        'STACK:  WORD    interrupt number
        'other registers as required by interrupt call
        'Return: registers as returned by interrupt call
    SCall(&H90) = "Hook_Device_Service"
        'EAX = service ID (high word = VxD ID, low = service number)
        'ESI -> new handler
    SCall(&H91) = "Hook_Device_V86_API"
    SCall(&H92) = "Hook_Device_PM_API"
    SCall(&H93) = "System_Control"
    SCall(&H94) = "Simulate_ I/O"
    SCall(&H95) = "Install_Multiple_I/O_Handlers"
    SCall(&H96) = "Install_I/O_Handler"
        'DX = I/O port address
        'ESI -> handler to call when I/O access attempted???
    SCall(&H97) = "Enable_Global_Trapping"
        'DX = I/O port address
    SCall(&H98) = "Enable_Local_Trapping"
        'DX = I/O port address
    SCall(&H99) = "Disable_Global_Trapping"
        'DX = I/O port address
    SCall(&H9A) = "Disable_Local_Trapping"
        'DX = I/O port address
    SCall(&H9B) = "Create_List"
    SCall(&H9C) = "Destroy_List"
    SCall(&H9D) = "Allocate_List"
    SCall(&H9E) = "Attach_List"
    SCall(&H9F) = "Attach_List_Tail"
    SCall(&HA0) = "Insert_Into_List"
    SCall(&HA1) = "Remove_From_List"
    SCall(&HA2) = "Deallocate_List"
    SCall(&HA3) = "Get_First_Item_In_List"
    SCall(&HA4) = "Get_Next_Item_In_List"
    SCall(&HA5) = "Remove_First_Item_In_List"
    SCall(&HA6) = "Add_Instance_Item"
    SCall(&HA7) = "Allocate_Device_Callback_Area"
    SCall(&HA8) = "Allocate_Global_V86_Data_Area"
    SCall(&HA9) = "Allocate_Temporary_V86_Data_Area"
    SCall(&HAA) = "Free_Temporary_V86_Data_Area"
    SCall(&HAB) = "Get_Decimal_Integer_From_Profile"
    SCall(&HAC) = "Convert_Decimal_String_To_Integer"
    SCall(&HAD) = "Get_Fixed_Point_Number_From_Profile"
    SCall(&HAE) = "Convert_Fixed_Point_String"
    SCall(&HAF) = "Get_Hex_Integer_From_Profile"
    SCall(&HB0) = "Convert_Hex_String_To_Integer"
    SCall(&HB1) = "Get_Boolean_Value_From_Profile"
    SCall(&HB2) = "Convert_Boolean_String"
    SCall(&HB3) = "Get_String_From_Profile"
    SCall(&HB4) = "Get_Next_String_From_Profile"
    SCall(&HB5) = "Get_Environment_String"
    SCall(&HB6) = "Get_Exec_Path"
    SCall(&HB7) = "Get_Configuration_Directory"
    SCall(&HB8) = "Open_File"
    SCall(&HB9) = "Get_PSP_Segment"
    SCall(&HBA) = "Get_DOS_Vectors"
    SCall(&HBB) = "Get_Machine_Information"
    SCall(&HBC) = "GetSet_HMA_Information"
    SCall(&HBD) = "Set_System_Exit_Code"
    SCall(&HBE) = "Fatal_Error_Handler"
    SCall(&HBF) = "Fatal_Memory_Error"
    SCall(&HC0) = "Update_SystemClock"
    SCall(&HC1) = "Test_If_Debugger_Installed"
    SCall(&HC2) = "Output_Debugger_String"
    SCall(&HC3) = "Output_Debugger_Character"
    SCall(&HC4) = "Input_Debugger_Character"
    SCall(&HC5) = "Debugger_Convert_Hex_To_Binary"
    SCall(&HC6) = "Debugger_Convert_Hex_To_Decimal"
    SCall(&HC7) = "Debugger_Test_If_Valid_Handle"
    SCall(&HC8) = "Validate_Client_Pointer"
    SCall(&HC9) = "Test_Reentry"
    SCall(&HCA) = "Queue_Debugger_String"
    SCall(&HCB) = "Log_Procedure_Call"
    SCall(&HCC) = "Debugger_Test_Current_VM"
    SCall(&HCD) = "Get_PM_Interrupt_Type"
    SCall(&HCE) = "Set_PM_Interrupt_Type"
    SCall(&HCF) = "Get_Last_Updated_System_Time"
    SCall(&HD0) = "Get_Last_Updated_VM_Execution_Time"
    SCall(&HD1) = "Test_If_Double_Byte_Character_Set_Lead_Byte"
    SCall(&HD2) = "_AddFreePhysPage"
    SCall(&HD3) = "_PageResetHandlePAddr"
    SCall(&HD4) = "_SetLastV86Page"
    SCall(&HD5) = "_GetLastV86Page"
    SCall(&HD6) = "_MapFreePhysReg"
    SCall(&HD7) = "_UnmapFreePhysReg"
    SCall(&HD8) = "_XchgFreePhysReg"
    SCall(&HD9) = "_SetFreePhysRegCalBk"
    SCall(&HDA) = "Get_Next_Arena"
    SCall(&HDB) = "Get_Name_Of_Ugly_TSR"
    SCall(&HDC) = "Get_Debug_Options"
    SCall(&HDD) = "Set_Physical_HMA_Alias"
    SCall(&HDE) = "_GetGlblRng0V86IntBase"
    SCall(&HDF) = "Add_Global_V86_Data_Area"
    SCall(&HE0) = "GetSet_Detailed_VM_Error"
    SCall(&HE1) = "Is_Debug_Chr"
    SCall(&HE2) = "Clear_Monochrome_Screen"
    SCall(&HE3) = "Output_Character_To_Mono_Screen"
    SCall(&HE4) = "Output_String_To_Mono_Screen"
    SCall(&HE5) = "Set_Current_Position_On_Mono_Screen"
    SCall(&HE6) = "Get_Current_Position_On_Mono_Screen"
    SCall(&HE7) = "Get_Character_From_Mono_Screen"
    SCall(&HE8) = "Locate_Byte_In_ROM"
    SCall(&HE9) = "Hook_Invalid_Page_Fault"
    SCall(&HEA) = "Unhook_Invalid_Page_Fault"
    SCall(&HEB) = "Set_Delete_On_Exit_File"
    SCall(&HEC) = "Close_VM"
    SCall(&HED) = "Enable_Touch_1st_Meg"
    SCall(&HEE) = "Disable_Touch_1st_Meg"
    SCall(&HEF) = "Install_Exception_Handler"
    SCall(&HF0) = "Remove_Exception_Handler"
    SCall(&HF1) = "Get_Crit_Status_No_Block"
    SCall(&HF2) = "_Schedule_VM_RTI_Event"
    SCall(&HF3) = "_Trace_Out_Service"
    SCall(&HF4) = "_Debug_Out_Service"
    SCall(&HF5) = "_Debug_Flags_Service"
    SCall(&HF6) = "VMM_Add_Import_Module_Name"
    SCall(&HF7) = "VMM_Add_DDB"
    SCall(&HF8) = "VMM_Remove_DDB"
    SCall(&HF9) = "Get_Thread_Time_Slice_Priority"
    SCall(&HFA) = "Set_Thread_Time_Slice_Priority"
    SCall(&HFB) = "Schedule_Thread_Event"
    SCall(&HFC) = "Cancel_Thread_Event"
    SCall(&HFD) = "Set_Thread_Timeout"
    SCall(&HFE) = "Set_Asynchronous_Timeout"
    SCall(&HFF) = "_AllocatreThreadDataSlot"
    SCall(&H100) = "_FreeThreadDataSlot"
    SCall(&H101) = "Create_Mutex"
    SCall(&H102) = "Destroy_Mutex"
    SCall(&H103) = "Get_Mutex_Owner"
    SCall(&H104) = "Call_When_Thread_Switched"
    SCall(&H105) = "Create_Thread"
    SCall(&H106) = "Start_Thread"
    SCall(&H107) = "Terminate_Thread"
    SCall(&H108) = "Get_Current_Thread_Handle"
    SCall(&H109) = "Test_Current_Thread_Handle"
    SCall(&H10A) = "Get_Sys_Thread_Handle"
    SCall(&H10B) = "Test_Sys_Thread_Handle"
    SCall(&H10C) = "Validate_Thread_Handle"
    SCall(&H10D) = "Get_Initial_Thread_Handle"
    SCall(&H10E) = "Test_Initial_Thread_Handle"
    SCall(&H10F) = "Debug_Test_Valid_Thread_Handle"
    SCall(&H110) = "Debug_Test_Cur_Thread"
    SCall(&H111) = "VMM_GetSystemInitState"
    SCall(&H112) = "Cancel_Call_When_Thread_Switched"
    SCall(&H113) = "Get_Next_Thread_Handle"
    SCall(&H114) = "Adjust_Thread_Exec_Priority"
    SCall(&H115) = "_Deallocate_Device_CB_Area"
    SCall(&H116) = "Remove_IO_Handler"
    SCall(&H117) = "Remove_Mult_IO_Handlers"
    SCall(&H118) = "Unhook_V86_Interrupt_Chain"
    SCall(&H119) = "Unhook_V86_Fault_Handler"
    SCall(&H11A) = "Unhook_PM_Fault_Handler"
    SCall(&H11B) = "Unhook_VMM_Fault_Handler"
    SCall(&H11C) = "Unhook_Device_Service"
    SCall(&H11D) = "_PageReserve"
    SCall(&H11E) = "_PageCommit"
    SCall(&H11F) = "_PageDecommit"
    SCall(&H120) = "_PagerRegister"
    SCall(&H121) = "_PagerQuery"
    SCall(&H122) = "_PagerDeregister"
    SCall(&H123) = "_ContextCreate"
    SCall(&H124) = "_ContextDestroy"
    SCall(&H125) = "_PageAttach"
    SCall(&H126) = "_PageFlush"
    SCall(&H127) = "_SignalID"
    SCall(&H128) = "_PageCommitPhys"
    SCall(&H129) = "_Register_Win32_Services"
    SCall(&H12A) = "Cancel_Call_When_Not_Critical"
    SCall(&H12B) = "Cancel_Call_When_Idle"
    SCall(&H12C) = "Cancel_Call_When_Task_Switched"
    SCall(&H12D) = "_Debug_Printf_Service"
    SCall(&H12E) = "Enter_Mutex"
    SCall(&H12F) = "Leave_Mutex"
    SCall(&H130) = "Simulate_VM_I/O"
    SCall(&H131) = "Signal_Semaphore_No_Switch"
    SCall(&H132) = "_MMSwitchContext"
    SCall(&H133) = "_MMModifyPermissions"
    SCall(&H134) = "_MMQuery"
    SCall(&H135) = "_EnterMustComplete"
    SCall(&H136) = "_LeaveMustComplete"
    SCall(&H137) = "_ResumeExecMustComplete"
    SCall(&H138) = "Get_Thread_Termination_Status"
    SCall(&H139) = "_GetInstanceInfo"
    SCall(&H13A) = "_ExecIntMustComplete"
    SCall(&H13B) = "_ExecVxDIntMustComplete"
    SCall(&H13C) = "Begin_V86_Serialization"
    SCall(&H13D) = "Unhook_V86_Page"
    SCall(&H13E) = "VMM_GetVxDLocationList"
    SCall(&H13F) = "VMM_GetDDBList"
    SCall(&H140) = "Unhook_NMI_Event"
    SCall(&H141) = "Get_Instanced_V86_Int_Vector"
    SCall(&H142) = "GetSet_Real_DOS_PSP"
    SCall(&H143) = "Call_Priority_Thread_Event"
    SCall(&H144) = "Get_System_Time_Address"
    SCall(&H145) = "Get_Crit_Status_Thread"
    SCall(&H146) = "Get_DDB"
    SCall(&H147) = "Directed_Sys_Control"
    SCall(&H148) = "_RegOpenKey"
    SCall(&H149) = "_RegCloseKey"
    SCall(&H14A) = "_RegCreateKey"
    SCall(&H14B) = "_RegDeleteKey"
    SCall(&H14C) = "_RegEnumKey"
    SCall(&H14D) = "_RegQueryValue"
    SCall(&H14E) = "_RegSetValue"
    SCall(&H14F) = "_RegDeleteValue"
    SCall(&H150) = "_RegEnumValue"
    SCall(&H151) = "_RegQueryValueEx"
    SCall(&H152) = "_RegSetValueEx"
    SCall(&H153) = "_CallRing3"
    SCall(&H154) = "Exec_PM_Int"
    SCall(&H155) = "_RegFlushKey"
    SCall(&H156) = "_PageCommitContig"
    SCall(&H157) = "_GetCurrentContext"
    SCall(&H158) = "_LocalizeSprintf"
    SCall(&H159) = "_LocalizeStackSprintf"
    SCall(&H15A) = "Call_Restricted_Event"
    SCall(&H15B) = "Cancel_Restricted_Event"
    SCall(&H15C) = "Register_PEF_Provider"
    SCall(&H15D) = "_GetPhysPageInfo"
    SCall(&H15E) = "_RegQueryInfoKey"
    SCall(&H15F) = "MemArb_Reserve_Pages"
    SCall(&H160) = "Time_Slice_Sys_VM_Idle"
    SCall(&H161) = "Time_Slice_Sleep"
    SCall(&H162) = "Boost_With_Decay"
    SCall(&H163) = "Set_Inversion_Pri"
    SCall(&H164) = "Reset_Inversion_Pri"
     SCall(&H165) = "Release_Inversion_Pri"
    SCall(&H166) = "Get_Thread_Win32_Pri"
    SCall(&H167) = "Set_Thread_Win32_Pri"
    SCall(&H168) = "Set_Thread_Static_Boost"
    SCall(&H169) = "Set_VM_Static_Boost"
    SCall(&H16A) = "Release_Inversion_Pri_ID"
    SCall(&H16B) = "Attach_Thread_To_Group"
    SCall(&H16C) = "Detach_Thread_From_Group"
    SCall(&H16D) = "Set_Group_Static_Boost"
    SCall(&H16E) = "_GetRegistryPath"
    SCall(&H16F) = "_GetRegistryKey"
    SCall(&H170) = "_CleanupNestedExec"
    SCall(&H171) = "_RegRemapPreDefKey"
    SCall(&H172) = "End_V86_Serialization"
    SCall(&H173) = "_Assert_Range"
    SCall(&H174) = "_Sprintf"
    SCall(&H175) = "_PageChangePager"
    SCall(&H176) = "_RegCreateDynKey"
    SCall(&H177) = "RegQMulti"
    SCall(&H178) = "Boost_Thread_With_VM"
    SCall(&H179) = "Get_Boot_Flags"
    SCall(&H17A) = "Set_Boot_Flags"
    SCall(&H17B) = "_lstrcpyn"
    SCall(&H17C) = "_lstrlen"
    SCall(&H17D) = "_lmemcpy"
    SCall(&H17E) = "_GetVxDName"
    SCall(&H17F) = "Force_Mutexes_Free"
    SCall(&H180) = "Restore_Forced_Mutexes"
    SCall(&H181) = "_AddReclaimableItem"
    SCall(&H182) = "_SetReclaimableItem"
    SCall(&H183) = "_EnumReclaimableItem"
    SCall(&H184) = "Time_Slice_Wake_Sys_VM"
    SCall(&H185) = "VMM_Replace_Global_Environment"
    SCall(&H186) = "Begin_Non_Serial_Nest_V86_Exec"
    SCall(&H187) = "Get_Nest_Exec_Status"
    SCall(&H188) = "Open_Boot_Log"
    SCall(&H189) = "Write_Boot_Log"
    SCall(&H18A) = "Close_Boot_Log"
    SCall(&H18B) = "EnableDisable_Boot_Log"
    SCall(&H18C) = "_Call_On_My_Stack"
    SCall(&H18D) = "Get_Inst_V86_Int_Vec_Base"
    SCall(&H18E) = "_lstrcmpi"
    SCall(&H18F) = "_strupr"
    SCall(&H190) = "Log_Fault_Call_Out"
    SCall(&H191) = "_AtEventTime"
    
    '0191h  ...last service for Windows95 SP1
    
    StatusStr(1) = "From th VMM calls window, Double click on the service calls to perform that service call." & vbCrLf & vbCrLf & "Note: Not all are set up to perform."
    StatusStr(2) = "Click the Disassemble button on the RAM page to see a disassembly for that RAM page."
    StatusStr(3) = "Click the Refresh button to see changes in the Status registers."
    StatusStr(4) = "The GDT tab lists the information about the Global Descriptor table."
    StatusStr(5) = "From the Ram tab page, type an addrees in the text box (either Hex or Decimal) then click the jump button to display that page of memory."
    StatusStr(6) = "On the VxD tab page click the VxD Calls button to display service calls for VMM Services."
    StatusStr(7) = "The IDT tab list the information about the Interrupt Descriptor table."
    StatusStr(8) = "From the Ram tab page, click the left and right arrow buttons to display the previous Ram page or next Ram page respectively."
    StatusStr(9) = "The LDT tab lists the information about the Local Descriptor table."
    StatusStr(10) = "Did you know The protected-mode enable (PE) bit determines if the 80386DX is in, the real or protected mode."
    StatusStr(11) = "Unchecking the Message ON checkbox stops these messages from displaying."
    StatusStr(12) = "The Ram page also displays the ascii representation, use the scroll bar to see it."
    StatusStr(13) = "The columns A1 and A2 are attributes for their repsective descriptor table."
    StatusStr(14) = "The respresentation of numbers is in hexadecimal notation."
    StatusStr(15) = "The text file services.dat list all Protected Mode service calls ."
    
End Function

